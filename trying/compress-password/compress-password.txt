in CompressionAlgorithms class :

public static List<CompressionResult> CompressFiles(List<string> files, string saveDirectory, Algorithm algorithm, Action<string> reportProgress, string password = null)
{
    var results = new List<CompressionResult>();

    foreach (string filePath in files)
    {
        byte[] fileData = File.ReadAllBytes(filePath);
        string fileName = Path.GetFileName(filePath);

        // ضغط الملف
        var result = CompressData(fileData, algorithm);

        if (!Directory.Exists(saveDirectory))
        {
            Directory.CreateDirectory(saveDirectory);
        }

        // If a password is provided, encrypt the compressed data
        byte[] finalData = result.CompressedData;
        bool isEncrypted = false;
        if (!string.IsNullOrEmpty(password))
        {
          finalData = Encrypt(finalData, password);
          isEncrypted = true;
        }

        // تحديد المسار النهائي داخل مجلد الحفظ
        string compressedFileName = fileName + ".cmp";
        string compressedFilePath = Path.Combine(saveDirectory, compressedFileName);
       
        
        // Write the data with the encryption flag at the beginning لنميز بين الي عليه كلمة سر والي ما عليه 
        //(byte)0x00  ->  مو محمي , (byte)0x01  -> محمي
        using (FileStream fs = new FileStream(compressedFilePath, FileMode.Create))
            {
                fs.WriteByte(isEncrypted ? (byte)0x01 : (byte)0x00); // First byte indicates encryption
                fs.Write(finalData, 0, finalData.Length);            // Compressed or encrypted data
            }

        // كتابة الملف المضغوط
        File.WriteAllBytes(compressedFilePath, result.CompressedData);

        // حفظ النتائج
        result.OriginalSize = fileData.Length;
        result.AlgorithmName = algorithm.ToString();

        results.Add(result);

        reportProgress?.Invoke($"✅ {fileName} مضغوط بنسبة {result.CompressionRatio:F2}%");
    }

    return results;
}


public static byte[] Encrypt(byte[] data, string password)
{
    using (Aes aes = Aes.Create())
    {
        byte[] salt = Encoding.UTF8.GetBytes("your_salt_1234"); // Should be saved with archive
        var key = new Rfc2898DeriveBytes(password, salt, 10000);

        aes.Key = key.GetBytes(32);
        aes.IV = key.GetBytes(16);

        var ms = new MemoryStream();
        var cryptoStream = new CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write);
        cryptoStream.Write(data, 0, data.Length);
        cryptoStream.FlushFinalBlock();
        return ms.ToArray();
    }
}


in form :

private void btnCompress_Click(object sender, EventArgs e)
{
    if (selectedFiles.Count == 0)
    {
        MessageBox.Show("يرجى اختيار ملفات أولاً.", "تحذير", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        return;
    }

    if (string.IsNullOrEmpty(savePath))
    {
        MessageBox.Show("يرجى اختيار مكان الحفظ أولاً.", "تحذير", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        return;
    }

    if (algoCombo.SelectedItem == null)
    {
        MessageBox.Show("يرجى اختيار خوارزمية الضغط.", "تحذير", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        return;
    }

    CompressionAlgorithms.Algorithm algo = algorithem == "Huffman"
    ? CompressionAlgorithms.Algorithm.Huffman
    : CompressionAlgorithms.Algorithm.ShannonFano;

    string password = txtPassword.Text;  //حنغير اسم مربع النص حسب شو اسمه عندك

    try
    {
        var results = CompressionAlgorithms.CompressFiles(selectedFiles, savePath, algo, msg =>
        {
            // عرض كل رسالة ضغط داخل صندوق حوار (أو تقدر تضيفها إلى ListBox إذا عندك)
            Console.WriteLine(msg);
        } , password);

        double avgRatio = results.Average(r => r.CompressionRatio);
        lblRatio.Text = $"نسبة الضغط: {avgRatio:F2}%";
        progressBar.Value = 100;

        MessageBox.Show("✅ تم ضغط جميع الملفات بنجاح!", "نجاح", MessageBoxButtons.OK, MessageBoxIcon.Information);

        MainForm mainForm = new MainForm();
        mainForm.Show();
        this.Close(); // أو this.Hide() إذا تفضلين إبقاءها بالذاكرة
    }
    catch (Exception ex)
    {
        MessageBox.Show("حدث خطأ أثناء الضغط:\n" + ex.Message, "خطأ", MessageBoxButtons.OK, MessageBoxIcon.Error);
    }
}

   